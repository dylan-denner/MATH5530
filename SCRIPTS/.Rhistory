print(ordered)
x <- 1000
a <- (1.2)^x
b <- (x)/(log(x))
c <- ((x)^1/2) + ((1/8)*(factorial(x)))
d <- (x*log(x))+((x)^9)
e <- (x^(1/3))*(log(x))
f <- 11*((log(x))^2)
g <- (5*((x)^2)) + (2*(log(x)))
df <- data.frame("function" = c("a", "b", "c", "d", "e", "f", "g"), "Values" = c(a,b,c,d,e,f,g))
ordered <- as.data.frame(df[order(df$Values),])
print(ordered)
x <- 1000
a <- (1.2)^x
b <- (x)/(log(x))
c <- ((x)^1/2) + ((1/8)*(factorial(x)))
d <- (x*log(x))+((x)^9)
e <- ((x)^1/3)*(log(x))
f <- 11*((log(x))^2)
g <- (5*((x)^2)) + (2*(log(x)))
df <- data.frame("function" = c("a", "b", "c", "d", "e", "f", "g"), "Values" = c(a,b,c,d,e,f,g))
ordered <- as.data.frame(df[order(df$Values),])
print(ordered)
View(ordered)
x <- 1000
a <- (1.2)^x
b <- (x)/(log(x))
c <- ((x)^1/2) + ((1/8)*(factorial(x)))
d <- (x*log(x))+((x)^9)
e <- ((x)^1/3)*(log(x))
f <- 11*((log(x))^2)
g <- (5*((x)^2)) + (2*(log(x)))
df <- data.frame("function" = c("a", "b", "c", "d", "e", "f", "g"), "Values" = c(a,b,c,d,e,f,g))
ordered <- as.data.frame(df[order(df$Values),])
print(ordered)
x <- 1000
a <- (1.2)^x
b <- (x)/(log(x))
c <- ((x)^(1/2)) + ((1/8)*(factorial(x)))
d <- (x*log(x))+((x)^9)
e <- ((x)^1/3)*(log(x))
f <- 11*((log(x))^2)
g <- (5*((x)^2)) + (2*(log(x)))
df <- data.frame("function" = c("a", "b", "c", "d", "e", "f", "g"), "Values" = c(a,b,c,d,e,f,g))
ordered <- as.data.frame(df[order(df$Values),])
print(ordered)
x <- 1000
a <- (1.2)^x
b <- (x)/(log(x))
c <- ((x)^(1/2)) + ((1/8)*(factorial(x)))
d <- (x*log(x))+((x)^9)
e <- ((x)^(1/3))*(log(x))
f <- 11*((log(x))^2)
g <- (5*((x)^2)) + (2*(log(x)))
df <- data.frame("function" = c("a", "b", "c", "d", "e", "f", "g"), "Values" = c(a,b,c,d,e,f,g))
ordered <- as.data.frame(df[order(df$Values),])
print(ordered)
n <- 1000
a <- (2*n)/(log2(n))
b <- 3*((n)^(2.5))
c <- log2(n)+((1.5)^n)
d <- ((5*(n^2))*(log2(n)))+n
e <- sqrt(n) + 0.5*(factorial(n))
f <- d*((log2(n))^2)
df <- data.frame("function" = c("a", "b", "c", "d", "e", "f"), "Values" = c(a,b,c,d,e,f))
ordered <- as.data.frame(df[order(df$Values),])
print(ordered)
n <- 1000
a <- (2*n)/(log2(n))
b <- 3*(n^(2.5))
c <- log2(n)+((1.5)^n)
d <- ((5*(n^2))*(log2(n)))+n
e <- sqrt(n) + 0.5*(factorial(n))
f <- d*((log2(n))^2)
df <- data.frame("function" = c("a", "b", "c", "d", "e", "f"), "Values" = c(a,b,c,d,e,f))
ordered <- as.data.frame(df[order(df$Values),])
print(ordered)
?qnorm
?z.test
??z.test
?var
###################################################################
#
#   MATH 5530
#   Week 9
#   Dylan Denner
#   03/25/2021
#   dd575213@ohio.edu
#
###################################################################
# Libraries needed for analysis
library(dplyr)
###################################################################
# Setting my working directory
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
###################################################################
# Start program run time
start.time <- Sys.time()
###################################################################
library(ISLR)
data(Smarket)
###################################################################
#
#   MATH 5530
#   Week 9
#   Dylan Denner
#   03/25/2021
#   dd575213@ohio.edu
#
###################################################################
# Libraries needed for analysis
library(dplyr)
###################################################################
# Setting my working directory
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
###################################################################
# Start program run time
start.time <- Sys.time()
###################################################################
library(ISLR)
data(Smarket)
force(Smarket)
View(Smarket)
###################################################################
#
#   MATH 5530
#   Week 9
#   Dylan Denner
#   03/25/2021
#   dd575213@ohio.edu
#
###################################################################
# Libraries needed for analysis
library(dplyr)
###################################################################
# Setting my working directory
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
###################################################################
# Start program run time
start.time <- Sys.time()
###################################################################
# Importing data
library(ISLR)
data(Weekly)
#####################################################################
# (a) Produce numerical and graphical summaries
names(Weekly)
###################################################################
#
#   MATH 5530
#   Week 9
#   Dylan Denner
#   03/25/2021
#   dd575213@ohio.edu
#
###################################################################
# Libraries needed for analysis
library(dplyr)
###################################################################
# Setting my working directory
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
###################################################################
# Start program run time
start.time <- Sys.time()
###################################################################
# Importing data
library(ISLR)
data(Weekly)
#####################################################################
# (a) Produce numerical and graphical summaries
names(Weekly)
names(Weekly)
dim(Weekly)
summary(Weekly)
pairs(Weekly)
cor(Weekly)
cor(Weekly[,-9])
attach(Weekly)
###################################################################
#
#   MATH 5530
#   Week 9
#   Dylan Denner
#   03/25/2021
#   dd575213@ohio.edu
#
###################################################################
# Libraries needed for analysis
library(dplyr)
###################################################################
# Setting my working directory
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
###################################################################
# Start program run time
start.time <- Sys.time()
###################################################################
# Importing data
library(ISLR)
data(Weekly)
#####################################################################
# (a) Produce numerical and graphical summaries
names(Weekly)
dim(Weekly)
summary(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
#####################################################################
# (b) Use the full data set to perform a logistic regression with
#Direction as the response and the five lag variables plus Volume
#as predictors. Use the summary function to print the results. Do
#any of the predictors appear to be statistically significant? If so,
#which ones?
attach(Weekly)
model <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data = Weekly, family = binomial)
summary(model)
model_probs <- predict(model, type = "response")
model_pred <- rep("Down", length(model_probs))
model_pred[model_probs > 0.5] <- "Up"
table(model_pred, Direction)
View(Weekly)
training_data <- subset(Weekly, Year < 2009)
training_data <- subset(Weekly, Year < 2009)
attach(training_data)
training_model <- glm(Direction~Lag2, data = training_data, family = binomial)
summary(training_model)
training_model_probs <- predict(training_model, type = "response")
training_model_pred <- rep("Down", length(training_model_probs))
training_model_pred[training_model_probs > 0.5] <- "Up"
table(training_model_pred, Direction)
training_model_probs <- predict(training_model, subset(Weekly, Weekly$Year > 2008) , type = "response")
training_model_pred <- rep("Down", length(training_model_probs))
training_model_pred[training_model_probs > 0.5] <- "Up"
table(training_model_pred, Direction)
training_model_probs <- predict(training_model, subset(Weekly, Weekly$Year > 2008) , type = "response")
training_model_pred <- rep("Down", length(training_model_probs))
training_model_pred[training_model_probs > 0.5] <- "Up"
table(training_model_pred, subset(Weekly, Weekly$Year > 2008))
training_data <- subset(Weekly, Year < 2009)
testing_data <- subset(Weekly, Year > 2008)
training_model <- glm(Direction~Lag2, data = training_data, family = binomial)
summary(training_model)
###################################################################
#
#   MATH 5530
#   Week 9
#   Dylan Denner
#   03/25/2021
#   dd575213@ohio.edu
#
###################################################################
# Libraries needed for analysis
library(dplyr)
###################################################################
# Setting my working directory
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
###################################################################
# Start program run time
start.time <- Sys.time()
###################################################################
# Importing data
library(ISLR)
data(Weekly)
#####################################################################
# (a) Produce numerical and graphical summaries
names(Weekly)
dim(Weekly)
summary(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
#####################################################################
# (b) Use the full data set to perform a logistic regression with
#Direction as the response and the five lag variables plus Volume
#as predictors. Use the summary function to print the results. Do
#any of the predictors appear to be statistically significant? If so,
#which ones?
attach(Weekly)
model <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data = Weekly, family = binomial)
summary(model)
#####################################################################
#(c) Compute the confusion matrix and overall fraction of correct
#predictions. Explain what the confusion matrix is telling you
#about the types of mistakes made by logistic regression.
model_probs <- predict(model, type = "response")
model_pred <- rep("Down", length(model_probs))
model_pred[model_probs > 0.5] <- "Up"
table(model_pred, Direction)
#####################################################################
#(d) Now fit the logistic regression model using a training data period
#from 1990 to 2008, with Lag2 as the only predictor. Compute the
#confusion matrix and the overall fraction of correct predictions
#for the held out data (that is, the data from 2009 and 2010).
train_data <- subset(Weekly, Year < 2009)
test_data <- subset(Weekly, Year > 2008)
train_model <- glm(Direction~Lag2, data = train_data, family = binomial)
summary(train_model)
train_model_probs <- predict(train_model, test_data , type = "response")
train_model_pred <- rep("Down", length(train_model_probs))
train_model_pred[train_model_probs > 0.5] <- "Up"
table(train_model_pred, train_data$Direction)
train_model_probs <- predict(train_model, test_data , type = "response")
train_model_pred <- rep("Down", length(train_model_probs))
train_model_pred[train_model_probs > 0.5] <- "Up"
table(train_model_pred, test_data$Direction)
library(MASS)
lda_model <- lda(Direction ~ Lag2, data = train_data)
lda_model
lda_pred <- predict(lda_model, test_data)
table(lda_pred$class, train_data$Direction)
View(lda_pred)
table(lda_pred$class, test_data$Direction)
qda_model <- qda(Direction ~ Lag2, data = train_data)
qda_class <- predict(qda_model, test_data)$class
table(qda_class, test_data$Direction)
KNN_train <- as.matrix(train_data$Lag2)
library(class)
KNN_train <- as.matrix(train_data$Lag2)
KNN_test <- as.matrix(test_data$Lag2)
#KNN_train_direction <-
set.seed(100)
KNN_pred <- knn(KNN_train, KNN_test, train_data$Direction, k=1)
table(KNN_pred, test_data$Direction)
Power <- function(){
print(2^3)
}
Power <- function(){
print(2^3)
}
Power
Power <- function(){
print(2^3)
}
Power()
Power <- function(){
print(2^3)
}
Power()
Power2 <- function(x,a){
print(x^a)
}
Power2(2,3)
Power2(3,8)
Power2(10,3)
Power2(8,17)
Power2(131,3)
Power3 <- function(x,a){
return(x^a)
}
x <- Power3(8,3)
Power3 <- function(x,a){
result <- Power2(x,a)
return(result)
}
x <- Power3(8,3)
x <- 1:10
y <- Power3(x, 2)
plot(x,y, main = "y = x^2 using Power3 function")
Powerplot <- function(x, a){
y <- Power3(x,a)
p <- plot(x,y)
return(p)
}
Powerplot(1:10, 3)
Powerplot(1:10, 3)
Powerplot(1:10, 2)
Powerplot(1:10, 3)
Powerplot <- function(x, a){
y <- Power3(x,a)
p <- plot(x,y, main = "Plot of y = x^a using Power3 function")
return(p)
}
Powerplot(1:10, 3)
knitr::opts_chunk$set(echo = TRUE)
```{r}
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
library(ISLR)
data(Weekly)
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
library(ISLR)
data(Weekly)
names(Weekly)
dim(Weekly)
summary(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
attach(Weekly)
model <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data = Weekly, family = binomial)
summary(model)
model_probs <- predict(model, type = "response")
model_pred <- rep("Down", length(model_probs))
model_pred[model_probs > 0.5] <- "Up"
table(model_pred, Direction)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/dylan/Documents/R/MATH5530/Week9")
library(ISLR)
data(Weekly)
names(Weekly)
dim(Weekly)
summary(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
attach(Weekly)
model <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data = Weekly, family = binomial)
summary(model)
model_probs <- predict(model, type = "response")
model_pred <- rep("Down", length(model_probs))
model_pred[model_probs > 0.5] <- "Up"
table(model_pred, Direction)
train_data <- subset(Weekly, Year < 2009)
test_data <- subset(Weekly, Year > 2008)
train_model <- glm(Direction~Lag2, data = train_data, family = binomial)
summary(train_model)
train_model_probs <- predict(train_model, test_data , type = "response")
train_model_pred <- rep("Down", length(train_model_probs))
train_model_pred[train_model_probs > 0.5] <- "Up"
table(train_model_pred, test_data$Direction)
library(MASS)
lda_model <- lda(Direction ~ Lag2, data = train_data)
lda_model
lda_pred <- predict(lda_model, test_data)
table(lda_pred$class, test_data$Direction)
qda_model <- qda(Direction ~ Lag2, data = train_data)
qda_class <- predict(qda_model, test_data)$class
table(qda_class, test_data$Direction)
library(class)
KNN_train <- as.matrix(train_data$Lag2)
KNN_test <- as.matrix(test_data$Lag2)
set.seed(100)
KNN_pred <- knn(KNN_train, KNN_test, train_data$Direction, k=1)
table(KNN_pred, test_data$Direction)
mean(KNN_pred == test_data$Direction)
mean(train_model_pred == test_data$Direction)
mean(KNN_pred == test_data$Direction)
mean(train_model_pred == test_data$Direction)
mean(lda_pred$class == test_data$Direction)
mean(qda_class == test_data$Direction)
mean(KNN_pred == test_data$Direction)
###################################################################
#
#   MATH 5530
#
#   Dylan Denner & Jackson Tucker
#   dd575213@ohio.edu & jt070017@ohio.edu
#   03/24/2021
#
#   Overview:
#   Adding county and region from Ohio dataset
#
###################################################################
# Working directory
setwd("C:/Users/dylan/Documents/R/MATH5530/Project/MATH5530/SCRIPTS/")
###################################################################
# Start program run time
start.time <- Sys.time()
###################################################################
# Libraries needed for analysis
library(dplyr)
library(tidycensus)
library(tidyverse)
library(tidyr)
library(readxl)
###################################################################
# Getting data from ACS
file_path <- "../DATA/BUILDING_OVERVIEW_1819.xlsx"
overview_data <- read_excel(file_path, sheet = "BUILDING_OVERVIEW")
file_path <- "../DATA/BUILDING_TEACHER_INFO_1819.xlsx"
teacher_data <- read_excel(file_path, sheet = "BUILDING_Educator_Measures")
file_path <- "../DATA/BUILDING_ACHIEVEMENT_1819.xlsx"
achieve_data <- read_excel(file_path, sheet = "Performance_Index")
file_path <- "../DATA/BUILDING_OVERVIEW_1819.xlsx"
overview_data <- read_excel(file_path, sheet = "BUILDING_OVERVIEW")
file_path <- "../DATA/BUILDING_TEACHER_INFO_1819.xlsx"
teacher_data <- read_excel(file_path, sheet = "BUILDING_Educator_Measures")
file_path <- "../DATA/BUILDING_ENROLLMENT_1819.xlsx"
enrollment_data <- read_excel(file_path, sheet = "BUILDING_Educator_Measures")
file_path <- "../DATA/BUILDING_OVERVIEW_1819.xlsx"
overview_data <- read_excel(file_path, sheet = "Performance_Index")
file_path <- "../PROJECT_DATA/BUILDING_OVERVIEW_1819.xlsx"
overview_data <- read_excel(file_path, sheet = "BUILDING_OVERVIEW")
file_path <- "../DATA/BUILDING_OVERVIEW_1819.xlsx"
overview_data <- read_excel(file_path, sheet = "BUILDING_OVERVIEW")
file_path <- "../DATA/BUILDING_ENROLLMENT_1819.xlsx"
enrollment_data <- read_excel(file_path, sheet = "Building_Enrollment")
file_path <- "../DATA/BUILDING_DISCIPLINE_1819.xlsx"
discipline_data <- read_excel(file_path, sheet = "DISCIPLINE")
View(overview_data)
colnames(overview_data)
overview_data <- select(
overview_data,
"Building Name",
"District Name",
"County",
"Enrollment 2018-2019",
"Attendance Rate 2018-2019",
"Chronic Absenteeism Percent 2018-2019"
)
overview_data <- select(
overview_data,
'Building Name',
"District Name",
"County",
"Enrollment 2018-2019",
"Attendance Rate 2018-2019",
"Chronic Absenteeism Percent 2018-2019"
)
library(dplyr)
library(tidycensus)
library(tidyverse)
library(tidyr)
library(readxl)
source('~/R/MATH5530/Project/MATH5530/SCRIPTS/AddingCountyRegion.R')
View(overview_data)
source('~/R/MATH5530/Project/MATH5530/SCRIPTS/AddingCountyRegion.R')
